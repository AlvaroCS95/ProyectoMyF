/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import LogicaDeNegocios.CoordinadorDeFacturaVenta;
import LogicaDeNegocios.CoordinadorDeDevoluciones;
import LogicaDeNegocios.CoordinadorDeProductosReintegrados;
import LogicaDeNegocios.CoordinadorDeProductosDesechados;
import AccesoDatos.*;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christian
 */
public class BuscarFacturasDeVentaQueTieneDevoluciones extends javax.swing.JFrame {

    /**
     * Creates new form BuscarFacturasDeVenta
     */
    Object[] filas;
    Object[] filasReintegro;
    Object[] filasDesechos;
    boolean seleccion = false;

    public BuscarFacturasDeVentaQueTieneDevoluciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        txtFacturaBuscar_BuscarFacturasVentas = new javax.swing.JTextField();
        btBuscar_BuscarFacturasDeVentas = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btListarFacturas_BuscarFacturasDeVentas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaFacturaVentasConDevoluciones_VisualizarDevoluciones = new javax.swing.JTable();
        btAceptar_BuscarFacturasDeVentas = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 112));
        jLabel1.setText("Buscar todas las facturas existentes que posee devoluviones");

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel49.setText("Número de Factura:");

        txtFacturaBuscar_BuscarFacturasVentas.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtFacturaBuscar_BuscarFacturasVentas.setForeground(new java.awt.Color(0, 102, 102));
        txtFacturaBuscar_BuscarFacturasVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFacturaBuscar_BuscarFacturasVentasKeyTyped(evt);
            }
        });

        btBuscar_BuscarFacturasDeVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Search_Icon_16.png"))); // NOI18N
        btBuscar_BuscarFacturasDeVentas.setText("Buscar");
        btBuscar_BuscarFacturasDeVentas.setToolTipText("Oprimir para guardar usuario");
        btBuscar_BuscarFacturasDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscar_BuscarFacturasDeVentasActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingrese el número de factura que desea buscar.");

        jLabel3.setText("Precione el siguiente boton para ver todas las facturas");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btListarFacturas_BuscarFacturasDeVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/listar.png"))); // NOI18N
        btListarFacturas_BuscarFacturasDeVentas.setText("Listar Facturas");
        btListarFacturas_BuscarFacturasDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarFacturas_BuscarFacturasDeVentasActionPerformed(evt);
            }
        });

        TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Factura", "Fecha Venta", "Fecha Ingreso Devolucion", "Monto Vendido", "Monto Reintegrado", "Monto Devolucion", "Nombre Usuario", "Nombre Local"
            }
        ));
        TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaFacturaVentasConDevoluciones_VisualizarDevolucionesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones);

        btAceptar_BuscarFacturasDeVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AcceptIcon.png"))); // NOI18N
        btAceptar_BuscarFacturasDeVentas.setText("Aceptar");
        btAceptar_BuscarFacturasDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptar_BuscarFacturasDeVentasActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CancelIconn.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(btAceptar_BuscarFacturasDeVentas)
                .addGap(409, 409, 409))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(57, 57, 57))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFacturaBuscar_BuscarFacturasVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btBuscar_BuscarFacturasDeVentas)))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(btListarFacturas_BuscarFacturasDeVentas))))
                    .addComponent(jLabel1))
                .addContainerGap(237, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(1, 1, 1)
                        .addComponent(btListarFacturas_BuscarFacturasDeVentas))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(txtFacturaBuscar_BuscarFacturasVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBuscar_BuscarFacturasDeVentas))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAceptar_BuscarFacturasDeVentas)
                    .addComponent(jButton1))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int FilaSeleccionada;


    private void txtFacturaBuscar_BuscarFacturasVentasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFacturaBuscar_BuscarFacturasVentasKeyTyped
        // TODO add your handling code here:char tecla=evt.getKeyChar();
        char tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_ENTER) {
            btBuscar_BuscarFacturasDeVentas.doClick();
        }
    }//GEN-LAST:event_txtFacturaBuscar_BuscarFacturasVentasKeyTyped

    private void btBuscar_BuscarFacturasDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscar_BuscarFacturasDeVentasActionPerformed
        try {
            DefaultTableModel modelo = new DefaultTableModel() {

                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };
            CoordinadorDeFacturaVenta elCoordinador = new CoordinadorDeFacturaVenta();
            ResultSet resultadoConsulta = elCoordinador.BuscarFacturaDeVentaQueTieneDevolucionPorNumeroDeFactura(txtFacturaBuscar_BuscarFacturasVentas.getText());

            modelo.addColumn("N° Factura");
            modelo.addColumn("Fecha Venta");
            modelo.addColumn("Fecha Devolucion");
            modelo.addColumn("Monto de Venta");
            modelo.addColumn("Monto de Devolución");
            modelo.addColumn("Monto de Reintegrado");
            modelo.addColumn("Nombre Usuario");
            modelo.addColumn("Nombre Local");
            filas = new Object[modelo.getColumnCount()];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);
                return;
            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < modelo.getColumnCount(); i++) {

                    filas[i] = resultadoConsulta.getObject(i + 1);

                }
                modelo.addRow(filas);
                TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.setModel(modelo);
            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }


    }//GEN-LAST:event_btBuscar_BuscarFacturasDeVentasActionPerformed

    private void btListarFacturas_BuscarFacturasDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarFacturas_BuscarFacturasDeVentasActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel modelo = new DefaultTableModel() {

                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };
            CoordinadorDeFacturaVenta elCoordinador = new CoordinadorDeFacturaVenta();
            ResultSet resultadoConsulta = elCoordinador.ListarFacturasDeVentaQueTienenDevoluciones();

            modelo.addColumn("N° Factura");
            modelo.addColumn("Fecha Venta");
            modelo.addColumn("Fecha Devolucion");
            modelo.addColumn("Monto de Venta");
            modelo.addColumn("Monto de Devolución");
            modelo.addColumn("Monto de Reintegrado");
            modelo.addColumn("Nombre Usuario");
            modelo.addColumn("Nombre Local");
            filas = new Object[modelo.getColumnCount()];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);
                return;
            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < modelo.getColumnCount(); i++) {

                    filas[i] = resultadoConsulta.getObject(i + 1);

                }
                modelo.addRow(filas);
                TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.setModel(modelo);
            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }

    }//GEN-LAST:event_btListarFacturas_BuscarFacturasDeVentasActionPerformed

    private void btAceptar_BuscarFacturasDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptar_BuscarFacturasDeVentasActionPerformed
        LimpiarTablas(VisualizarYEditarDevoluciones.TablaDetalleFacturaDeVenta_VisualizarDevoluciones, VisualizarYEditarDevoluciones.ModeloDetalleProductosVisualizar);
        LimpiarTablas(VisualizarYEditarDevoluciones.TablaProductosDesechados_VisualizarDevoluciones, VisualizarYEditarDevoluciones.ModeloProductosDesechadosVisualizar);
        LimpiarTablas(VisualizarYEditarDevoluciones.TablaReintegro_Devoluciones, VisualizarYEditarDevoluciones.ModeloProductosReintegradosVisualizar);
        if (seleccion == false) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Primero seleccione una fila");

        } else {

            int fila = FilaSeleccionada;
            VisualizarYEditarDevoluciones.txtNFactura_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 0).toString());
            VisualizarYEditarDevoluciones.txtNombreLocal_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 7).toString());
            VisualizarYEditarDevoluciones.txtFechaDeVenta_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 1).toString());
            VisualizarYEditarDevoluciones.txtMontoDeVenta_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 3).toString());
            VisualizarYEditarDevoluciones.txtNombreUsuario_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 6).toString());
            VisualizarYEditarDevoluciones.txtFechaDevolucion_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 2).toString());
            VisualizarYEditarDevoluciones.txtMontoDevolucion_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 5).toString());
            VisualizarYEditarDevoluciones.txtMontoReintegrado_VisualizarDevoluciones.setText(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 4).toString());
            //insertar en la tabla

            LlenarTablaDetalleVenta(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 0).toString());
            LlenarTablaDevoluciones(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 0).toString());
            LlenarTablaReintegro(TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getValueAt(fila, 0).toString());

            //fin insertar tabla
            dispose();
        }
    }//GEN-LAST:event_btAceptar_BuscarFacturasDeVentasActionPerformed

    public void LimpiarTablas(JTable TablaALimpiar, DefaultTableModel ModeloALimpiar) {

        for (int contador = 0; contador < TablaALimpiar.getRowCount(); contador++) {
            ModeloALimpiar.removeRow(contador);
            contador -= 1;
        }
    }

    private void TablaFacturaVentasConDevoluciones_VisualizarDevolucionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaFacturaVentasConDevoluciones_VisualizarDevolucionesMousePressed
        FilaSeleccionada = TablaFacturaVentasConDevoluciones_VisualizarDevoluciones.getSelectedRow();
        seleccion = true;
    }//GEN-LAST:event_TablaFacturaVentasConDevoluciones_VisualizarDevolucionesMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    private int DevolverIdDevolucionPOrcodigoFactura(String NumeroFactura) {
        int IdDevolucionBuscada = 0;
        CoordinadorDeDevoluciones LaDevolucion = new CoordinadorDeDevoluciones();
        try {
            IdDevolucionBuscada = LaDevolucion.DevolverIdDevolucion(NumeroFactura);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error buscando iddevolucion", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return IdDevolucionBuscada;
    }

    public void LlenarTablaDetalleVenta(String NumeroFactura) {

        try {
            CoordinadorDeFacturaVenta elCoordinador = new CoordinadorDeFacturaVenta();
            ResultSet resultadoConsulta = elCoordinador.BuscarTodosLosProductosDeUnaFacturaDeVenta(NumeroFactura);

            VisualizarYEditarDevoluciones.ModeloDetalleProductosVisualizar.setColumnIdentifiers(new Object[]{"Codigo Producto", "Nombre Producto", "Cantidad Vendida"});

            filas = new Object[3];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);

            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < 3; i++) {

                    filas[i] = resultadoConsulta.getObject(i + 1);

                }
                VisualizarYEditarDevoluciones.ModeloDetalleProductosVisualizar.addRow(filas);
                VisualizarYEditarDevoluciones.TablaDetalleFacturaDeVenta_VisualizarDevoluciones.setModel(VisualizarYEditarDevoluciones.ModeloDetalleProductosVisualizar);

            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }
    }

    public void LlenarTablaDevoluciones(String NumeroFactura) {
        CoordinadorDeDevoluciones elCoordinadorDeDevoluciones = new CoordinadorDeDevoluciones();
        int IdDevolucion = DevolverIdDevolucionPOrcodigoFactura(NumeroFactura);
        try {

            CoordinadorDeProductosDesechados elCoordinador = new CoordinadorDeProductosDesechados();
            ResultSet resultadoConsulta = elCoordinador.MostrartodosLosProductoDesechadosPorNDevolución(IdDevolucion);

            VisualizarYEditarDevoluciones.ModeloProductosDesechadosVisualizar.setColumnIdentifiers(new Object[]{"Codigo Producto", "Nombre Producto", "Cantidad Desechada", "Detalle"});

            //modelo.addColumn("Consumible");
            filasDesechos = new Object[4];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);

            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < 4; i++) {

                    filasDesechos[i] = resultadoConsulta.getObject(i + 1);

                }
                VisualizarYEditarDevoluciones.ModeloProductosDesechadosVisualizar.addRow(filasDesechos);
                VisualizarYEditarDevoluciones.TablaProductosDesechados_VisualizarDevoluciones.setModel(VisualizarYEditarDevoluciones.ModeloProductosDesechadosVisualizar);

            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }
    }

    public void LlenarTablaReintegro(String NumeroFactura) {
        CoordinadorDeDevoluciones elCoordinadorDeDevoluciones = new CoordinadorDeDevoluciones();
        int IdDevolucion = DevolverIdDevolucionPOrcodigoFactura(NumeroFactura);
        try {

            CoordinadorDeProductosReintegrados elCoordinador = new CoordinadorDeProductosReintegrados();
            ResultSet resultadoConsulta = elCoordinador.MostrartodosLosProductoReintegradosPorNDevolución(IdDevolucion);

            VisualizarYEditarDevoluciones.ModeloProductosReintegradosVisualizar.setColumnIdentifiers(new Object[]{"Codigo Producto", "Nombre Producto", "Cantidad Reintegrada"});

            //modelo.addColumn("Consumible");
            filasReintegro = new Object[3];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);

            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < 3; i++) {

                    filasReintegro[i] = resultadoConsulta.getObject(i + 1);

                }
                VisualizarYEditarDevoluciones.ModeloProductosReintegradosVisualizar.addRow(filasReintegro);
                VisualizarYEditarDevoluciones.TablaReintegro_Devoluciones.setModel(VisualizarYEditarDevoluciones.ModeloProductosReintegradosVisualizar);

            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaFacturaVentasConDevoluciones_VisualizarDevoluciones;
    private javax.swing.JButton btAceptar_BuscarFacturasDeVentas;
    public static javax.swing.JButton btBuscar_BuscarFacturasDeVentas;
    private javax.swing.JButton btListarFacturas_BuscarFacturasDeVentas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtFacturaBuscar_BuscarFacturasVentas;
    // End of variables declaration//GEN-END:variables
}
