/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import LogicaDeNegocios.CoordinadorDeFacturaVenta;
import AccesoDatos.*;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christian
 */
public class BuscarFacturasDeVenta extends javax.swing.JFrame {

    /**
     * Creates new form BuscarFacturasDeVenta
     */
    Object[] filas;
    boolean seleccion = false;

    public BuscarFacturasDeVenta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        txtFacturaBuscar_BuscarFacturasVentas = new javax.swing.JTextField();
        btBuscar_BuscarFacturasDeVentas = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btListarFacturas_BuscarFacturasDeVentas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaFacturaVentas_Devoluciones = new javax.swing.JTable();
        btAceptar_BuscarFacturasDeVentas = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 112));
        jLabel1.setText("Buscar todas las facturas existentes");

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel49.setText("Número de Factura:");

        txtFacturaBuscar_BuscarFacturasVentas.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtFacturaBuscar_BuscarFacturasVentas.setForeground(new java.awt.Color(0, 102, 102));
        txtFacturaBuscar_BuscarFacturasVentas.setToolTipText("Número de factura que desea buscar y luego clic buscar");
        txtFacturaBuscar_BuscarFacturasVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFacturaBuscar_BuscarFacturasVentasKeyTyped(evt);
            }
        });

        btBuscar_BuscarFacturasDeVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Search_Icon_16.png"))); // NOI18N
        btBuscar_BuscarFacturasDeVentas.setText("Buscar");
        btBuscar_BuscarFacturasDeVentas.setToolTipText("Oprimir para buscar factura de venta con el número ingresado");
        btBuscar_BuscarFacturasDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscar_BuscarFacturasDeVentasActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingrese el número de factura que desea buscar.");

        jLabel3.setText("Precione el siguiente boton para ver todas las facturas");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btListarFacturas_BuscarFacturasDeVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/listar.png"))); // NOI18N
        btListarFacturas_BuscarFacturasDeVentas.setText("Listar Facturas");
        btListarFacturas_BuscarFacturasDeVentas.setToolTipText("Se muestran todas las facturas que no tengan devoluciones");
        btListarFacturas_BuscarFacturasDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarFacturas_BuscarFacturasDeVentasActionPerformed(evt);
            }
        });

        TablaFacturaVentas_Devoluciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Factura", "Fecha Venta", "Monto Vendido", "Nombre Usuario", "Nombre Local"
            }
        ));
        TablaFacturaVentas_Devoluciones.setToolTipText("Facturas de venta que no tienen devoluciones");
        TablaFacturaVentas_Devoluciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaFacturaVentas_DevolucionesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaFacturaVentas_Devoluciones);

        btAceptar_BuscarFacturasDeVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AcceptIcon.png"))); // NOI18N
        btAceptar_BuscarFacturasDeVentas.setText("Aceptar");
        btAceptar_BuscarFacturasDeVentas.setToolTipText("seleccione alguna factura y luegoo precione este botón para agregarle devoluciones");
        btAceptar_BuscarFacturasDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptar_BuscarFacturasDeVentasActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CancelIconn.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel49)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFacturaBuscar_BuscarFacturasVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscar_BuscarFacturasDeVentas)))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(btListarFacturas_BuscarFacturasDeVentas))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(btAceptar_BuscarFacturasDeVentas)
                .addGap(279, 279, 279))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(39, 39, 39))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel49)
                        .addComponent(txtFacturaBuscar_BuscarFacturasVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btBuscar_BuscarFacturasDeVentas))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btListarFacturas_BuscarFacturasDeVentas))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAceptar_BuscarFacturasDeVentas)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int FilaSeleccionada;


    private void txtFacturaBuscar_BuscarFacturasVentasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFacturaBuscar_BuscarFacturasVentasKeyTyped
        // TODO add your handling code here:char tecla=evt.getKeyChar();
        char tecla = evt.getKeyChar();
        if (tecla == KeyEvent.VK_ENTER) {
            btBuscar_BuscarFacturasDeVentas.doClick();
        }
    }//GEN-LAST:event_txtFacturaBuscar_BuscarFacturasVentasKeyTyped

    private void btBuscar_BuscarFacturasDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscar_BuscarFacturasDeVentasActionPerformed
        try {
            DefaultTableModel modelo = new DefaultTableModel() {

                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };
            CoordinadorDeFacturaVenta elCoordinador = new CoordinadorDeFacturaVenta();
            ResultSet resultadoConsulta = elCoordinador.BuscarFacturaDeVentaQueNoTieneDevolucionPorNumeroDeFactura(txtFacturaBuscar_BuscarFacturasVentas.getText());

            modelo.addColumn("N° Factura");
            modelo.addColumn("Fecha Venta");
            modelo.addColumn("Monto de Venta");
            modelo.addColumn("Nombre Usuario");
            modelo.addColumn("Nombre Local");
            filas = new Object[modelo.getColumnCount()];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                if (resultadoConsulta.next()) {
                    resultadoConsulta.previous();
                    while (resultadoConsulta.next()) {                        
                        for (int i = 0; i < modelo.getColumnCount(); i++) {
                            filas[i] = resultadoConsulta.getObject(i + 1);
                        }
                        modelo.addRow(filas);                        
                    }
                    TablaFacturaVentas_Devoluciones.setModel(modelo);
                } else {
                    JOptionPane.showMessageDialog(null, "La factura N° "+txtFacturaBuscar_BuscarFacturasVentas.getText()+
                            " ya cuenta con una devolución.\nDirijase al apartado 'Visualizar devoluciones' \n"
                            + "para obtener más detalles.","¡Advertencia!",JOptionPane.WARNING_MESSAGE);
                    
                }

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "error sql");

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "error class not found");

        }


    }//GEN-LAST:event_btBuscar_BuscarFacturasDeVentasActionPerformed

    private void btListarFacturas_BuscarFacturasDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarFacturas_BuscarFacturasDeVentasActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel modelo = new DefaultTableModel() {

                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };
            CoordinadorDeFacturaVenta elCoordinador = new CoordinadorDeFacturaVenta();
            ResultSet resultadoConsulta = elCoordinador.ListarFacturasDeVentaQueNoTienenDevoluciones();

            modelo.addColumn("N° Factura");
            modelo.addColumn("Fecha Venta");
            modelo.addColumn("Monto de Venta");
            modelo.addColumn("Nombre Usuario");
            modelo.addColumn("Nombre Local");
            filas = new Object[modelo.getColumnCount()];
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);
                return;
            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < modelo.getColumnCount(); i++) {

                    filas[i] = resultadoConsulta.getObject(i + 1);

                }
                modelo.addRow(filas);
                TablaFacturaVentas_Devoluciones.setModel(modelo);
            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }

    }//GEN-LAST:event_btListarFacturas_BuscarFacturasDeVentasActionPerformed

    private void btAceptar_BuscarFacturasDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptar_BuscarFacturasDeVentasActionPerformed
        if (seleccion == false) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null, "Primero seleccione una fila");

        } else {
            LimpiarTablas(IngresarDevoluciones.TablaDetalleFacturaDeVenta_Devoluciones, IngresarDevoluciones.ModeloDetalleProductos);
            int fila = FilaSeleccionada;
            IngresarDevoluciones.txtNFactura_IngresarDevoluciones.setText(TablaFacturaVentas_Devoluciones.getValueAt(fila, 0).toString());
            //IngresarDevoluciones.txtNFactura_IngresarDevoluciones.setEnabled(true);
            IngresarDevoluciones.txtNombreLocal_IngresarDevoluciones.setText(TablaFacturaVentas_Devoluciones.getValueAt(fila, 4).toString());
            //IngresarDevoluciones.txtNombreLocal_IngresarDevoluciones.setEnabled(true);
            IngresarDevoluciones.txtFechaDeVenta_IngresarDevoluciones.setText(TablaFacturaVentas_Devoluciones.getValueAt(fila, 1).toString());
            //IngresarDevoluciones.txtFechaDeVenta_IngresarDevoluciones.setEnabled(true);
            IngresarDevoluciones.txtMontoDeVenta_IngresarDevoluciones.setText(TablaFacturaVentas_Devoluciones.getValueAt(fila, 2).toString());
            //IngresarDevoluciones.txtMontoDeVenta_IngresarDevoluciones.setEnabled(true);
            IngresarDevoluciones.txtNombreUsuario_IngresarDevoluciones.setText(TablaFacturaVentas_Devoluciones.getValueAt(fila, 3).toString());
            //IngresarDevoluciones.txtNombreUsuario_IngresarDevoluciones.setEnabled(true);
            //insertar en la tabla
            try {

                CoordinadorDeFacturaVenta elCoordinador = new CoordinadorDeFacturaVenta();
                ResultSet resultadoConsulta = elCoordinador.BuscarTodosLosProductosDeUnaFacturaDeVenta(TablaFacturaVentas_Devoluciones.getValueAt(fila, 0).toString());

                IngresarDevoluciones.ModeloDetalleProductos.setColumnIdentifiers(new Object[]{"Codigo Producto", "Nombre Producto", "Cantidad Vendida", "Cantidad Restante"});

                //modelo.addColumn("Consumible");
                filas = new Object[4];
                if (resultadoConsulta == null) {
                    JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                while (resultadoConsulta.next()) {
                    for (int i = 0; i < 3; i++) {

                        filas[i] = resultadoConsulta.getObject(i + 1);

                    }
                    filas[3] = filas[2];
                    IngresarDevoluciones.ModeloDetalleProductos.addRow(filas);
                    IngresarDevoluciones.TablaDetalleFacturaDeVenta_Devoluciones.setModel(IngresarDevoluciones.ModeloDetalleProductos);

                }
            } catch (SQLException ex) {

            } catch (ClassNotFoundException ex) {

            }
            LimpiarTablas(IngresarDevoluciones.TablaProductosDesechados_Devoluciones, IngresarDevoluciones.ModeloProductosDesechados);
            LimpiarTablas(IngresarDevoluciones.TablaReintegro_Devoluciones, IngresarDevoluciones.ModeloProductosReintegrados);
            //fin insertar tabla
            dispose();
        }
    }//GEN-LAST:event_btAceptar_BuscarFacturasDeVentasActionPerformed

    public void LimpiarTablas(JTable TablaALimpiar, DefaultTableModel ModeloALimpiar) {

        for (int contador = 0; contador < TablaALimpiar.getRowCount(); contador++) {
            ModeloALimpiar.removeRow(contador);
            contador -= 1;
        }
    }

    private void TablaFacturaVentas_DevolucionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaFacturaVentas_DevolucionesMousePressed
        FilaSeleccionada = TablaFacturaVentas_Devoluciones.getSelectedRow();
        seleccion = true;
    }//GEN-LAST:event_TablaFacturaVentas_DevolucionesMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaFacturaVentas_Devoluciones;
    private javax.swing.JButton btAceptar_BuscarFacturasDeVentas;
    public static javax.swing.JButton btBuscar_BuscarFacturasDeVentas;
    private javax.swing.JButton btListarFacturas_BuscarFacturasDeVentas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtFacturaBuscar_BuscarFacturasVentas;
    // End of variables declaration//GEN-END:variables
}
