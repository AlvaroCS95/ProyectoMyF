/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import LogicaDeNegocios.CoordinadorDeCamion;
import static UI.BuscarClientes.txtCedulaABuscar_BuscarCliente;
import static UI.ListarCamiones.TablaListarCamiones_ListarCamiones;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Laura
 */
public class BuscarCamiones extends javax.swing.JDialog {

    static Object[] filas;
    int FilaSeleccionadaParaEliminar;
    public static TableRowSorter trsFiltro;
    boolean SeleccionDeFila = false;

    public BuscarCamiones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        VisualizarTodosLosCamion();
        cerrar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuFiltrar = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        Eliminar = new javax.swing.JMenuItem();
        Activar = new javax.swing.JMenuItem();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaBuscarCamiones = new javax.swing.JTable();
        jLabel49 = new javax.swing.JLabel();
        txtPlaca_BuscarCamion = new javax.swing.JTextField();
        cbxFiltro = new javax.swing.JComboBox();
        jLabel52 = new javax.swing.JLabel();

        Editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editarMenu.png"))); // NOI18N
        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        menuFiltrar.add(Editar);

        Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminarMenu.png"))); // NOI18N
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        menuFiltrar.add(Eliminar);

        Activar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ActivarMenu.png"))); // NOI18N
        Activar.setText("Activar");
        Activar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActivarActionPerformed(evt);
            }
        });
        menuFiltrar.add(Activar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TablaBuscarCamiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaBuscarCamiones.setComponentPopupMenu(menuFiltrar);
        TablaBuscarCamiones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaBuscarCamionesMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(TablaBuscarCamiones);

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel49.setText("N° Placa");

        txtPlaca_BuscarCamion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPlaca_BuscarCamion.setForeground(new java.awt.Color(0, 102, 102));
        txtPlaca_BuscarCamion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPlaca_BuscarCamionKeyTyped(evt);
            }
        });

        cbxFiltro.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cbxFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N°Placa", "Marca", "Modelo" }));
        cbxFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFiltroActionPerformed(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 102, 112));
        jLabel52.setText("Busqueda de camiones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel49)
                        .addGap(43, 43, 43)
                        .addComponent(txtPlaca_BuscarCamion, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(cbxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPlaca_BuscarCamion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel49)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel52)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void cerrar(){
addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                 int Decision = JOptionPane.showConfirmDialog(
                null,
                "Desea salir de esta ventana",
                "Salir",
                JOptionPane.YES_NO_OPTION);

        if (Decision == JOptionPane.YES_OPTION) {
            ListarCamiones.panelHabilitado=false;
            dispose();
        }
            }
        });
}
    private void TablaBuscarCamionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaBuscarCamionesMousePressed
        FilaSeleccionadaParaEliminar = TablaBuscarCamiones.getSelectedRow();
        SeleccionDeFila = true;
    }//GEN-LAST:event_TablaBuscarCamionesMousePressed

    private void txtPlaca_BuscarCamionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlaca_BuscarCamionKeyTyped
        BuscarCamion();
    }//GEN-LAST:event_txtPlaca_BuscarCamionKeyTyped
    private int YesNoQuestionParaConsultaAlUsuario(String ConsultaAlUsuario, String TituloDelFrame) {

        int OpcionDelUsuario = JOptionPane.showConfirmDialog(null, ConsultaAlUsuario, TituloDelFrame, JOptionPane.YES_NO_OPTION);
        return OpcionDelUsuario;
    }

    public static void filtro() {
        int columnaABuscar = 0;
        if (cbxFiltro.getSelectedItem() == "N°Placa") {
            columnaABuscar = 0;
        }
        if (cbxFiltro.getSelectedItem() == "Marca") {
            columnaABuscar = 1;
        }
        if (cbxFiltro.getSelectedItem() == "Modelo") {
            columnaABuscar = 4;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter(txtPlaca_BuscarCamion.getText(), columnaABuscar));
    }

    public void EliminarCamion() throws SQLException, ClassNotFoundException {
        if (SeleccionDeFila == false) {
            JOptionPane.showMessageDialog(null, "Primero selecione un camion de la lista.");
        } else {
              String Estado = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 8).toString();
              String Placa = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 0).toString();

            if (Estado.equals("Inactivo")) {
                JOptionPane.showMessageDialog(null, "Este camion ha sido eliminado con anterioridad");
            } else {
            int OpcionDelUsuario = YesNoQuestionParaConsultaAlUsuario("¿Seguro que desea eliminar el camion con el numero de placa: " + Placa + "?", "Eliminar camión");
            if (OpcionDelUsuario == JOptionPane.YES_OPTION) {

                CoordinadorDeCamion elCoordinadorDeCamiones = new CoordinadorDeCamion();
                elCoordinadorDeCamiones.CambiarEstadoCamion(Placa);
                ListarCamiones.VisualizarCamion(TablaListarCamiones_ListarCamiones);
                if (ListarCamiones.panelHabilitado == true) {
                    
                    txtPlaca_BuscarCamion.setText("");
                    BuscarCamion();
                    VisualizarTodosLosCamion();
                    
                }
            }}
            SeleccionDeFila = false;
        }
    }

    public static void VisualizarTodosLosCamion() {
        try {
            DefaultTableModel modelo = new DefaultTableModel() {

                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };
            CoordinadorDeCamion elCoordinador = new CoordinadorDeCamion();
            ResultSet resultadoConsulta = elCoordinador.ListarTodosLosCamiones();

            modelo.addColumn("N°Placa");
            modelo.addColumn("Marca");
            modelo.addColumn("Estilo");
            modelo.addColumn("Color");
            modelo.addColumn("Fecha de compra");
            modelo.addColumn("Registrado por usuario");
            modelo.addColumn("Capacidad");
            modelo.addColumn("Modelo");
            modelo.addColumn("Estado");
            filas = new Object[modelo.getColumnCount()];
            TablaBuscarCamiones.setModel(modelo);
            if (resultadoConsulta == null) {
                JOptionPane.showMessageDialog(null, "Verifique que tenga permisos de administrador", "Error de permisos", JOptionPane.ERROR_MESSAGE);
                return;
            }
            while (resultadoConsulta.next()) {
                for (int i = 0; i < modelo.getColumnCount(); i++) {

                    if ((i + 1) == 9) {
                        if (resultadoConsulta.getBoolean(i + 1) == true) {
                            filas[i] = "Activo";

                        } else {
                            filas[i] = "Inactivo";
                        }
                    } else {
                        filas[i] = resultadoConsulta.getObject(i + 1);
                    }

                }
                modelo.addRow(filas);
                TablaBuscarCamiones.setModel(modelo);
            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {

        }

    }

    public void EditarCamion() {
        if (SeleccionDeFila == false) {
            JOptionPane.showMessageDialog(null, "Primero selecione un proveedor de la lista.");
        } else {
            String NumeroDePlaca = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 0).toString();
            String Marca = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 1).toString();
            String Modelo = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 7).toString();
            String Estilo = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 2).toString();
            String Color = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 3).toString();
            Date FechaDeCompra = (Date) TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 4);
            float Capacidad = Float.parseFloat(TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 6).toString());
            EditarCamion editarCamion = new EditarCamion(null, true, NumeroDePlaca, Marca, Modelo, Estilo, Color, FechaDeCompra, Capacidad);
            editarCamion.setVisible(true);
        }
    }

    public void ActivarCamion() throws SQLException, ClassNotFoundException {
        if (SeleccionDeFila == false) {
            JOptionPane.showMessageDialog(null, "Primero selecione un camión de la lista.");
        } else {
            String Estado = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 8).toString();
            String Placa = TablaBuscarCamiones.getValueAt(FilaSeleccionadaParaEliminar, 0).toString();

            if (Estado.equals("Activo")) {
                JOptionPane.showMessageDialog(null, "Este camion ha sido activado con anterioridad");
            } else {
                int OpcionDelUsuario = YesNoQuestionParaConsultaAlUsuario("¿Seguro que desea activar el camón:"
                        + "con la cedula placa: " + Placa + "?", "Activar Camón");
                if (OpcionDelUsuario == JOptionPane.YES_OPTION) {

                    CoordinadorDeCamion elCoordinadorDeCamiones = new CoordinadorDeCamion();
                    elCoordinadorDeCamiones.CambiarEstadoCamion(Placa);
                      ListarCamiones.VisualizarCamion(TablaListarCamiones_ListarCamiones);
                    if (ListarCamiones.panelHabilitado == true) {

                        txtPlaca_BuscarCamion.setText("");
                        BuscarCamion();
                        VisualizarTodosLosCamion();

                    }

                }
            }
        }
    }

    public static void BuscarCamion() {

        txtPlaca_BuscarCamion.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtPlaca_BuscarCamion.getText());
                txtPlaca_BuscarCamion.setText(cadena);
                // repaint();
                filtro();

            }
        });
        trsFiltro = new TableRowSorter(TablaBuscarCamiones.getModel());
        TablaBuscarCamiones.setRowSorter(trsFiltro);
    }
    private void cbxFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFiltroActionPerformed

    }//GEN-LAST:event_cbxFiltroActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        EditarCamion();
    }//GEN-LAST:event_EditarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        try {
            EliminarCamion();        // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(BuscarCamiones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BuscarCamiones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void ActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivarActionPerformed
        try {
            ActivarCamion();
        } catch (SQLException ex) {
            Logger.getLogger(BuscarCamiones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BuscarCamiones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ActivarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Activar;
    private javax.swing.JMenuItem Editar;
    private javax.swing.JMenuItem Eliminar;
    public static javax.swing.JTable TablaBuscarCamiones;
    public static javax.swing.JComboBox cbxFiltro;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPopupMenu menuFiltrar;
    public static javax.swing.JTextField txtPlaca_BuscarCamion;
    // End of variables declaration//GEN-END:variables
}
